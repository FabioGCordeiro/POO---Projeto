/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class SelecionarInscrito extends javax.swing.JFrame {
    ArrayList<Pessoa> listaPessoas = new ArrayList<>();
    ArrayList<Local> listaLocais = new ArrayList<>();
    /**
     * Seleção do utilizador, inscrito no convívio, que pretende fazer log in.
     * @param listaPessoas lista de pessoas presentes na base de dados.
     * @param listaLocais lista de locais presentes na base de dados.
     */
    public SelecionarInscrito(ArrayList<Pessoa> listaPessoas,ArrayList<Local> listaLocais) {
        this.listaPessoas = listaPessoas;
        this.listaLocais = listaLocais;
        initComponents();
        adicionaInscritos();
        verificaNumeroInscritos();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void adicionaInscritos(){
        for(int i=0;i<listaPessoas.size();i++){
            if(listaPessoas.get(i).isInscrito())
                inscritoBox.addItem(listaPessoas.get(i).getNome());
        }
    }
    
    private void verificaNumeroInscritos(){
        if(inscritoBox.getItemCount()==0){
                seguinteButton.setEnabled(false);
            }
            else{    
                seguinteButton.setEnabled(true);
            }
    }
    
    public boolean verificaPassword(){
        for(int i=0;i<listaPessoas.size();i++){
            if(listaPessoas.get(i).getNome().equals(inscritoBox.getSelectedItem().toString())){
                if(listaPessoas.get(i).getPassword().equals(Arrays.toString(passwordField.getPassword()))){
                    return true;
                }
                else{
                    JOptionPane.showMessageDialog(null,"A password inserida não é correta!","Erro",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        return false;
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inscritoBox = new javax.swing.JComboBox<>();
        inscritoLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        anteriorButton = new javax.swing.JButton();
        seguinteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);

        inscritoLabel.setText("Inscrito");

        passwordLabel.setText("Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inscritoLabel)
                    .addComponent(passwordLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inscritoBox, 0, 316, Short.MAX_VALUE)
                    .addComponent(passwordField))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inscritoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inscritoLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        anteriorButton.setText("Anterior");
        anteriorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorButtonActionPerformed(evt);
            }
        });

        seguinteButton.setText("Seguinte");
        seguinteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                seguinteButtonMouseEntered(evt);
            }
        });
        seguinteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seguinteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(seguinteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(anteriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anteriorButton)
                    .addComponent(seguinteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void seguinteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seguinteButtonActionPerformed
        boolean flag;
        flag = verificaPassword();
        if(flag){
            ConvivialMenu novo = new ConvivialMenu(listaPessoas,listaLocais,inscritoBox.getSelectedItem().toString());
            novo.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_seguinteButtonActionPerformed

    private void anteriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorButtonActionPerformed
        this.dispose();
        MainMenu novomenu = new MainMenu(listaPessoas,listaLocais);
        novomenu.setVisible(true);
    }//GEN-LAST:event_anteriorButtonActionPerformed

    private void seguinteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seguinteButtonMouseEntered
        if(!(seguinteButton.isEnabled())){
            JOptionPane.showMessageDialog(null, "Não há utilizadores inscritos no convívio!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_seguinteButtonMouseEntered

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anteriorButton;
    private javax.swing.JComboBox<String> inscritoBox;
    private javax.swing.JLabel inscritoLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton seguinteButton;
    // End of variables declaration//GEN-END:variables
}
