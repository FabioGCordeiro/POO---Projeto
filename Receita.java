/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.util.ArrayList;

/**
 *
 * @author ASUS
 */
public class Receita extends javax.swing.JFrame {
    private ArrayList<Pessoa> listaPessoas = new ArrayList<>();
    private ArrayList<Local> listaLocais = new ArrayList<>();
    private final String nome;
    private double receitaMinima;

    /**
     * Secção de apresentação da receita mínima esperada do convívio constituída pela soma das receitas dos bares e das exposições. 
     * No caso dos bares, pela multiplicação do seu consumo mínimo pelo número de inscrições desse mesmo bar, e no caso das exposições pela multiplicação do seu custo pelo número de exposições na mesma. 
     * @param listaPessoas lista de pessoas presentes na base de dados.
     * @param listaLocais lista de locais presentes na base de dados.
     * @param nome nome da pessoa cuja conta está ligada.
     */
    public Receita(ArrayList<Pessoa> listaPessoas,ArrayList<Local> listaLocais,String nome) {
        this.listaPessoas = listaPessoas;
        this.listaLocais = listaLocais;
        this.nome = nome;
        initComponents();
        receitaMinima = calculaReceita();
        jLabel2.setText(String.valueOf(receitaMinima));
    }
    
    
    private double calculaReceita(){
       for(int i=0;i<listaLocais.size();i++){
            if(listaLocais.get(i).getMoney()>0){
                switch (listaLocais.get(i).getFlag()) {
                    case 6:
                        for(int j=0;j<listaLocais.get(i).getListaInscritos().size();j++){
                            receitaMinima += listaLocais.get(i).getMoney();
                        }   break;
                    case 5:
                        for(int j=0;j<listaLocais.get(i).getListaInscritos().size();j++){
                            if(listaLocais.get(i).getListaInscritos().get(j).getFlag() == 1){
                                receitaMinima += 0.9*listaLocais.get(i).getMoney();
                            }
                            else{
                                receitaMinima += listaLocais.get(i).getMoney();
                            }
                        }   break;
                    default:
                        receitaMinima += 0;
                        break;
                }
            }
        } 
        return receitaMinima;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subtituloLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Apresentação da receita mínima");
        setResizable(false);

        subtituloLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        subtituloLabel.setText("Receita mínima esperada do convívio:");

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subtituloLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subtituloLabel)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        ConvivialMenu novo = new ConvivialMenu(listaPessoas,listaLocais,nome);
        novo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel subtituloLabel;
    // End of variables declaration//GEN-END:variables
}
